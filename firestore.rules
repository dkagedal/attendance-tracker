rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isUser(uid) {
        let user = /databases/$(database)/documents/users/$(uid);
        return exists(user);
    }

    match /users/{user} {
			allow read: if request.auth.uid == user;
      allow create: if request.auth.uid == user;
      allow update: if request.auth.uid == user && request.resource.data == resource.data;
      allow delete: if false;
    }

    match /hosts/{hostname} {
      allow get: if true;
    }

    match /bands/{band} {
      allow list: if false;
			allow get: if true;
			allow write: if false;

      function isMember(uid) {
        let member = /databases/$(database)/documents/bands/$(band)/members/$(uid);
        return exists(member);
      }

      function isAdmin(uid) {
        let member = /databases/$(database)/documents/bands/$(band)/members/$(uid);
        return exists(member) && get(member).data.admin;
      }

      match /join_requests/{user} {
        allow list: if isAdmin(request.auth.uid);
        allow get: if request.auth.uid == user || isAdmin(request.auth.uid);
        allow create: if (request.resource.id == request.auth.uid 
                          && !isMember(request.auth.uid)
                          && isUser(request.auth.uid)
                          && !request.resource.data.approved);
        allow update: if isAdmin(request.auth.uid);
        allow delete: if isAdmin(request.auth.uid);
      }

      match /members/{uid} {
        allow read: if isMember(request.auth.uid);
        allow create, delete: if false;

        // Allow a user to change their own display name
        allow update: if (request.auth.uid == uid
                          && request.resource.data.diff(resource.data).affectedKeys()
                              .hasOnly(['display_name']));

        match /private/settings {
          allow read: if request.auth.uid == uid;
          allow write: if request.auth.uid == uid;
        }
      }

    	match /events/{event} {
        allow read, write: if isMember(request.auth.uid);

        match /participants/{participant} {
          allow read: if isMember(request.auth.uid);
          allow write: if request.resource.id == request.auth.uid && isMember(request.auth.uid);
        }
      }
    }
  }
} 
